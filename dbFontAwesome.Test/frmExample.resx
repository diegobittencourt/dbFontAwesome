<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFontAwesome2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>